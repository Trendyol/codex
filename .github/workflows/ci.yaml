on:
  label:
    types:
      - created
  push:
    branches:
      - main
      - ci

env:
  REGISTRY: ghcr.io
  CLIENT_IMAGE_NAME: ${{ github.repository }}-client
  SERVER_IMAGE_NAME: ${{ github.repository }}-server

jobs:
  install:
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout"
        uses: actions/checkout@v3
      - name: Set up Node.js
        working-directory: client
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'yarn'
      - name: "Install Client"
        working-directory: client
        run: yarn

  build:
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout"
        uses: actions/checkout@v3
      - name: "Build Client"
        working-directory: client
        run: yarn build
      - name: Archive build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: client-build
          path: |
            dist
    needs: install

  dockerize:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: "Checkout"
        uses: actions/checkout@v3
      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.CLIENT_IMAGE_NAME }}
      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
    needs: build
